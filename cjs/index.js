var m=Object.defineProperty;var v=n=>m(n,"__esModule",{value:!0});var b=(n,e)=>{v(n);for(var s in e)m(n,s,{get:e[s],enumerable:!0})};b(exports,{onAppend:()=>u,onEntry:()=>l,onRemove:()=>h});var y={childList:!0,subtree:!0},i=new WeakMap,c=new WeakMap,r=new WeakMap;function u(n,e){if(i.has(n)){i.get(n).push(e);return}i.set(n,[e]);let s=new MutationObserver(t=>{if(document.contains(n)){s.disconnect();let o=i.get(n);o&&o.forEach(f=>f(n)),i.delete(n)}});s.observe(document,y)}function h(n,e){if(c.has(n)){c.get(n).push(e);return}c.set(n,[e]),u(n,()=>{let s=new MutationObserver(()=>{if(!document.contains(n)){s.disconnect();let t=c.get(n);t&&t.forEach(o=>o(n)),c.delete(n)}});s.observe(document,y)})}var l=(n,e,{minHeight:s="50px",root:t}={})=>{if(r.has(n)){r.get(n).push(e);return}r.set(n,[e]),u(n,()=>{if(n.style.minHeight||(n.style.minHeight=s),!n.getAttribute("data-lazy")){n.setAttribute("data-lazy","1");let o=new IntersectionObserver(f=>{f.forEach(d=>{if(n.setAttribute("data-lazy","2"),d.isIntersecting){o.disconnect();let p=r.get(n);p&&p.forEach(E=>E(d)),r.delete(n)}})},{root:t,rootMargin:window.innerHeight/2+"px"});o.observe(n),h(n,()=>{o.disconnect()})}})};
