var observeOption={childList:!0,subtree:!0};function onAppend(t,e){var o=new MutationObserver(function(n){document.contains(t)&&(o.disconnect(),e())});o.observe(document,observeOption)}function onRemove(t,e){onAppend(t,function(){var n=new MutationObserver(function(){document.contains(t)||(n.disconnect(),e())});n.observe(document,observeOption)})}var onEntry=function(e,o,n){var t=void 0===n?{}:n,n=t.minHeight,i=void 0===n?"50px":n,r=t.root;onAppend(e,function(){var t;e.style.minHeight||(e.style.minHeight=i),e.getAttribute("data-lazy")||(e.setAttribute("data-lazy","1"),(t=new IntersectionObserver(function(n){n.forEach(function(n){e.setAttribute("data-lazy","2"),n.isIntersecting&&(t.disconnect(),o(n))})},{root:r,rootMargin:window.innerHeight/2+"px"})).observe(e),onRemove(e,function(){t.disconnect()}))})};export{onAppend,onEntry,onRemove};
//# sourceMappingURL=index.js.map
