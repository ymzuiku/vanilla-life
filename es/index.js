var p={childList:!0,subtree:!0},i=new WeakMap,c=new WeakMap,r=new WeakMap;function m(n,s){if(i.has(n)){i.get(n).push(s);return}i.set(n,[s]);let o=new MutationObserver(t=>{if(document.contains(n)){o.disconnect();let e=i.get(n);e&&e.forEach(f=>f(n)),i.delete(n)}});o.observe(document,p)}function h(n,s){if(c.has(n)){c.get(n).push(s);return}c.set(n,[s]),m(n,()=>{let o=new MutationObserver(()=>{if(!document.contains(n)){o.disconnect();let t=c.get(n);t&&t.forEach(e=>e(n)),c.delete(n)}});o.observe(document,p)})}var E=(n,s,{minHeight:o="50px",root:t}={})=>{if(r.has(n)){r.get(n).push(s);return}r.set(n,[s]),m(n,()=>{if(n.style.minHeight||(n.style.minHeight=o),!n.getAttribute("data-lazy")){n.setAttribute("data-lazy","1");let e=new IntersectionObserver(f=>{f.forEach(u=>{if(n.setAttribute("data-lazy","2"),u.isIntersecting){e.disconnect();let d=r.get(n);d&&d.forEach(y=>y(u)),r.delete(n)}})},{root:t,rootMargin:window.innerHeight/2+"px"});e.observe(n),h(n,()=>{e.disconnect()})}})};export{m as onAppend,E as onEntry,h as onRemove};
