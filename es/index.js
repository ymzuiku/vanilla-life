var observeOption={childList:!0,subtree:!0},appendWeak=new WeakMap,removeWeak=new WeakMap,entryWeak=new WeakMap;function onAppend(t,e){var o;appendWeak.has(t)?appendWeak.get(t).push(e):(appendWeak.set(t,[e]),(o=new MutationObserver(function(e){var n;document.contains(t)&&(o.disconnect(),(n=appendWeak.get(t))&&n.forEach(function(e){return e(t)}),appendWeak.delete(t))})).observe(document,observeOption))}function onRemove(t,e){removeWeak.has(t)?removeWeak.get(t).push(e):(removeWeak.set(t,[e]),onAppend(t,function(){var n=new MutationObserver(function(){var e;document.contains(t)||(n.disconnect(),(e=removeWeak.get(t))&&e.forEach(function(e){return e(t)}),removeWeak.delete(t))});n.observe(document,observeOption)}))}var onEntry=function(o,e,n){var t=void 0===n?{}:n,n=t.minHeight,a=void 0===n?"50px":n,r=t.root;entryWeak.has(o)?entryWeak.get(o).push(e):(entryWeak.set(o,[e]),onAppend(o,function(){var t;o.style.minHeight||(o.style.minHeight=a),o.getAttribute("data-lazy")||(o.setAttribute("data-lazy","1"),(t=new IntersectionObserver(function(e){e.forEach(function(n){var e;o.setAttribute("data-lazy","2"),n.isIntersecting&&(t.disconnect(),(e=entryWeak.get(o))&&e.forEach(function(e){return e(n)}),entryWeak.delete(o))})},{root:r,rootMargin:window.innerHeight/2+"px"})).observe(o),onRemove(o,function(){t.disconnect()}))}))};export{onAppend,onEntry,onRemove};
//# sourceMappingURL=index.js.map
